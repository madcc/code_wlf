#ifndef __FLASH_SPI_H
#define __FLASH_SPI_H

#include "stm32f10x.h"
#define SST_SELECT()   GPIO_ResetBits(GPIOB, GPIO_Pin_12)       /* SST CS = L */
#define SST_DESELECT()   GPIO_SetBits(GPIOB, GPIO_Pin_12)        /* SST CS = H */

/***********************************************
**函数名:FLASH_SPI_Config
**功能:初始化串行FLASH的SPI接口
**注意事项:串行FLASH使用了SPI1接口
***********************************************/
void FLASH_SPI_Config(void);

/***************************************
**函数名:SPIByte
**功能:读写SPI总线
**注意事项:对于SPI来说，主机的读也需要先写，
**使用此函数，读的时候建议参数设置为0xff，写的时候则写参数.这里使用直接操作寄存器的办法实现SPI硬件层读写,是为了加快速写速度 在说LCD 的时候我用的就是库函数 比如

SPI_I2S_SendData   SPI_I2S_ReceiveData SPI_I2S_GetFlagStatus
***************************************/
static u8 SPI2Byte(u8 byte);

//咱用模式0
/*****************************************
**函数名:SSTCmd1/2/4
**功能:写一个SST命令/写一个命令后接一个数据/写一个命令后再写3个数据
**注意事项:这是一个完整的单命令操作，不返回
*****************************************/
void SSTCmd1(u8 cmd);

void SSTCmd2(u8 cmd,u8 data);

void SSTCmd4(u8 cmd,u8 *addr);


/****************************************
**函数名:SSTCmdb1b/SSTCmd4bs
**功能:写一个SST命令，返回1字节数据/写1个命令字，3个地址字，返回多个字节
**更多使用在读出上的
****************************************/
u8 SSTCmdb1b(u8 cmd);
void SSTCmd4bs(u8 cmd,u8* addr,u8* data,u32 no);


//命令时序复杂啊~~当然了我这为了求全都写出来了
//常用的芯片功能
/***************************************
SST25WREN 允许写功能
***************************************/
void SST25WREN(void);

/***********************************
SST25WRDI 屏蔽写功能
***********************************/
void SST25WRDI(void);

/**********************************
SST25BY 检测忙
**********************************/
u8 SST25BY(void);

/***********************************
SST25WPEN 允许软件写保护
注意事项:25的写入比较繁琐，建议在每次操作前都取消掉写保护，操作完成后则重新允许写保护
***********************************/
void SST25WPEN(void);

//先消除保护位，再允许写位
void SST25WriteEn(void);

/********************************寄存器Status Register**********************************/


/**********************************
SST25ReadID 读取SST的ID 这个功能 呵呵不用多说~当然单纯的读写操作肯定用不上
**********************************/
u16 SST25ReadID(void);

/**********************************
SST25ChipErase 刷除CHIP
**********************************/
void SST25ChipErase(void);

/***********************************
SST25SectorErase 刷扇区 用的是4kb大小 假如地址在0~4095 之间那么这之间的地址都会刷除

当然我给 4096 的话4096到4096+4095 之间都会刷掉
***********************************/
void SST25SectorErase(u32 addr);

/**********************************
SST25ByteProgram 写一个字节*注意在此前要调用取消写保护,实际写应使用AAI,此函数在AAI中调用，用于写奇数个字节
**********************************/
void SST25ByteProgram(u32 addr,u8 byte); 

/***********************************
SST25Write 写多个字节
***********************************/
void SST25Write(u32 addr,u8* p_data,u32 no);

//我们用的是下边这种

/*************************************
SST25Read 高速读 对于后续带5的芯片，可调用此函数读
*************************************/
void SST25Read(u32 addr,u8* p_data,u32 no);

/****************************************
SST25ReadL 低速读
****************************************/
void SST25ReadL(u32 addr,u8* p_data,u32 no);
void TestSst(void);	//测试SST
#endif
